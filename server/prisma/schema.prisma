// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @unique
  username String
  email    String   @unique
  phone    String   @db.VarChar(64)
  weixin   String   @db.VarChar(64)
  level    Int?
  height   Int?
  weight   Int?
  avatar   String?  @db.VarChar(255)
  gender   gender?
  Active   Active[]
}

model Active {
  id                    Int           @id @default(autoincrement())
  avatar                String        @db.VarChar(255) // 封面
  title                 String        @db.VarChar(255) // 标题
  organizer_type        String        @default("people") // 组织者类型 club
  address_id            Int           @unique
  Address               ActiveAddress @relation(fields: [address_id], references: [id])
  venue_number          String?       @db.VarChar(64) // 场地号
  active_start_time     String // 活动开始时间
  active_end_time       String[] // 活动结束时间
  active_date           String[] // 活动日期
  registration_deadline Int? // 取消报名截止时间
  desc                  String        @db.Text
  pictures              String        @db.Text
  registration_count    Int // 报名人数
  registration_fee      Int // 报名费用
  charge_type           String // 收费类型
  qr_code_image         String? // 二维码收款图片
  lady_discount         Boolean       @default(false) // 女士优惠
  lady_level            Int? // 等级男
  man_level             Int? // 等级女
  phone                 String        @db.VarChar(64)
  weixin                String        @db.VarChar(64)
  allow_guests          Boolean       @default(false) // 允许带人
  max_guests            Int? // 带人限制(人数)
  auto_cancel           Boolean       @default(false) // 自动取消
  date_limit            Int? // 开场前？个小时
  numbers_limit         Int? // 人数不足？个人
  create_time           DateTime      @default(now())
  update_time           DateTime      @updatedAt
  user_id               String
  CreateBy              User?          @relation(fields: [user_id], references: [id])
}

model ActiveAddress {
  id        Int     @id @default(autoincrement())
  name      String
  latitude  Int
  longitude Int
  address   String
  province  String
  city      String
  district  String
  active    Active?
}

enum gender {
  F
  M
}
